version: "3.9"

services:
  ts:
    build:
      context: .
      dockerfile: Dockerfile-ts
    ports:
      - "3000:3000"
    networks:
      - my-network
    restart: unless-stopped

  zil:
    build:
      context: .
      dockerfile: Dockerfile-zil
    ports:
      - "8080:8080"
    networks:
      - my-network
    restart: unless-stopped
  web:
    build: .
    command: python /code/manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/code
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - celery
      - beat
    networks:
      - my-network
    restart: unless-stopped

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - "POSTGRES_HOST_AUTH_METHOD=trust"
    networks:
      - my-network
    restart: unless-stopped

  redis:
    image: redis:latest
    networks:
      - my-network
    mem_limit: 1024m
    restart: unless-stopped

  celery:
    build: .
    command: celery -A cosmos worker -l info
    volumes:
      - .:/code
    depends_on:
      - redis
      - beat
    networks:
      - my-network
    restart: unless-stopped

  beat:
    build: .
    command: celery -A cosmos beat -l info
    volumes:
      - .:/code
    depends_on:
      - redis
    networks:
      - my-network
    restart: unless-stopped

volumes:
  postgres_data:



networks:
    my-network: